<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\SS.Platform.OA.Model\\DataModel.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using SS.Platform.OA.Dal;
using SS.Platform.OA.IDal;

namespace SS.Platform.OA.DalFactory
{
    /// <summary>
    /// DbSsesion本质就是一个简单工厂，但从抽象意义来说，
    /// 它就是整个数据访问层的统一入口，
    /// 拿到了Dbssion就能拿到整个数据访问层所有的DAL
    /// 
    /// </summary>
    public partial class DbSession : IDbSession
    {
<#
// Emit Entity Types
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		public I<#=entity.Name#>Dal <#=entity.Name#>Dal
        {
            get { return new <#=entity.Name#>Dal(); }
        }
<#}#>
	}
}